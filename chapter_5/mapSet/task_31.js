/*
Анаграммы – это слова, у которых те же буквы в том же количестве, но они располагаются в другом порядке.

Например:

nap - pan
ear - are - era
cheaters - hectares - teachers
Напишите функцию aclean(arr), которая возвращает массив слов, очищенный от анаграмм.
*/

function aclean(arr) {
    let result = new Map(); //объявить объект Map

    for (let word of arr) { //перебрать массив
        let sorted = word.
            toLowerCase(). //перевести каждый элемент массива в нижний регистр
            split(""). //сплитать элемент, то есть разбить на массив из букв
            sort(). //отсортировать буквы
            join(""); // обратно вернуть массив букв в строку
        result.set(sorted, word); //добавить в меп ключ и значение: отсортирвоанное слово в нижнем регистре и 
        //его первоначальное значение как было в условии
    }

    return [...result.values()]; //получить обычный массив из мепа
}

let arr = ["nap", "teachers", "cheaters", "PAN", "ear", "era", "hectares"];

alert(aclean(arr)); // "nap,teachers,ear" или "PAN,cheaters,era"
/*
Из каждой группы анаграмм должно остаться только одно слово, не важно какое.

Если мы когда-либо ещё встретим слово в той же отсортированной форме, 
тогда это слово перезапишет значение с тем же ключом в объекте. 
Таким образом, нескольким словам у нас будет всегда соответствовать одна отсортированная форма.
*/